<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MangadexDownloader</name>
    </assembly>
    <members>
        <member name="P:MangadexDownloader.ContentInfo.ChapterInfo.Pages">
            <summary>
            all pages
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.ChapterInfo.Page.PageName">
            <summary>
            page file name
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.ChapterInfo.Page.PageNumber">
            <summary>
            page number in chapter
            </summary>
        </member>
        <member name="T:MangadexDownloader.ContentInfo.IChapterInfo">
            <summary>
            Interface for class ChapterInfo
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.Id">
            <summary>
            chapter id
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.MangaId">
            <summary>
            manga id
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.Volume">
            <summary>
            volume number
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.Chapter">
            <summary>
            chapter number
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.PageArray">
            <summary>
            JArray with all pages in it
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.Pages">
            <summary>
            Pages info (name, number)
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.LangCode">
            <summary>
            language code
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.Hash">
            <summary>
            Chapter's hash for ServerUrl
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.ServerUrl">
            <summary>
            Server url for pages
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IChapterInfo.LangName">
            <summary>
            language name
            </summary>
        </member>
        <member name="T:MangadexDownloader.ContentInfo.IMangaInfo">
            <summary>
            interface MangaInfo
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IMangaInfo.CoverUrl">
            <summary>
            url to cover of manga
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IMangaInfo.Title">
            <summary>
            title of manga
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IMangaInfo.Chapters">
            <summary>
            chapters info
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.IMangaInfo.ShortChaptersInfo">
            <summary>
            short info about manga
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.CoverUrl">
            <summary>
            manga's cover url
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.Title">
            <summary>
            title of manga
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.Chapters">
            <summary>
            Chapters in manga
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.ShortChaptersInfo">
            <summary>
            ShortChaptersInfo contains short info about all chapters in manga (volume number, chapter number, id and language code)
            </summary>
        </member>
        <member name="T:MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo">
            <summary>
            short information about chapter
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo.Id">
            <summary>
            Id of this chapter
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo.Volume">
            <summary>
            volume number
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo.Chapter">
            <summary>
            chapter number
            </summary>
        </member>
        <member name="P:MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo.LangCode">
            <summary>
            lang Code of this chapter
            </summary>
        </member>
        <member name="T:MangadexDownloader.Parsing.ContentParsing.IChapterParser">
            <summary>
            interface for chapter parser
            </summary>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.IChapterParser.Pattern">
            <summary>
            pattern for naming every page, regular expression
            </summary>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.IChapterParser.Dir">
            <summary>
            dir for pages
            </summary>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.IChapterParser.Parse(MangadexDownloader.ContentInfo.IChapterInfo)">
            <summary>
            parse pages into directory
            </summary>
            <param name="chapterInfo">chapterInfo for parsing</param>
        </member>
        <member name="T:MangadexDownloader.Parsing.ContentParsing.IMangaParser">
            <summary>
            interface for MangaParser
            </summary>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.IMangaParser.MangaInfo">
            <summary>
            information about manga
            </summary>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.IMangaParser.ChaptersInfo">
            <summary>
            Contains information about all Chapters
            </summary>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.IMangaParser.Dir">
            <summary>
            dir for pages
            </summary>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.IMangaParser.Parse(System.Predicate{MangadexDownloader.ContentInfo.IChapterInfo})">
            <summary>
            parse all pages
            </summary>
            <param name="match">parse if only ChapterInfo is match</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.IMangaParser.ParseChaptersInfo(System.Predicate{MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo})">
            <summary>
            parse chapters info into List IChapterInfo property
            </summary>
            <param name="match">add ChapterInfo to list if ShortChapterInfo match</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.IMangaParser.ParseChaptersInfoThreadPool(System.Int32,System.Predicate{MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo})">
            <summary>
            paralell parse chapters info
            </summary>
            <param name="processes">how many processes is running at the same time</param>
            <param name="match">add ChapterInfo to list if ShortChapterInfo match</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.MangaParser.#ctor(MangadexDownloader.ContentInfo.IMangaInfo,System.IO.DirectoryInfo)">
            <summary>
            get directly mangainfo object
            </summary>
            <param name="mangaInfo">manga to parse</param>
            <param name="dir">directory for all pages</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.MangaParser.#ctor(System.Int32,System.IO.DirectoryInfo)">
            <summary>
            get manga info by id
            </summary>
            <param name="id">manga's id to parse</param>
            <param name="dir">directory for all pages</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.MangaParser.#ctor(System.IO.DirectoryInfo)">
            <summary>
            set only dir, but you still have to define MangaInfo!
            </summary>
            <param name="dir">directory for all pages</param>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.MangaParser.MangaInfo">
            <summary>
            manga to parse
            </summary>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.MangaParser.ChaptersInfo">
            <summary>
            chapters info (to get info use method ParseChaptersInfo)
            </summary>
        </member>
        <member name="P:MangadexDownloader.Parsing.ContentParsing.MangaParser.Dir">
            <summary>
            Directory where save all pages
            </summary>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.MangaParser.Parse(System.Predicate{MangadexDownloader.ContentInfo.IChapterInfo})">
            <summary>
            parse all chapters in ChaptersInfo
            </summary>
            <param name="match">predicate for chapters</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.MangaParser.ParseChaptersInfo(System.Predicate{MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo})">
            <summary>
            parse chapters info into chaptersInfo list
            </summary>
            <param name="match">predicate for chapters</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.ContentParsing.MangaParser.ParseChaptersInfoThreadPool(System.Int32,System.Predicate{MangadexDownloader.ContentInfo.MangaInfo.ShortChapterInfo})">
            <summary>
            paralell parse chapters info
            </summary>
            <param name="processes">how many processes is running at the same time</param>
            <param name="match">add ChapterInfo to list if ShortChapterInfo match</param>
        </member>
        <member name="M:MangadexDownloader.Parsing.JsonParsing.IChapterJsonParser.ConvertJson(System.String)">
            <summary>
            convert json string to ChapterInfo instance
            </summary>
            <param name="json"></param>
            <returns>ChapterInfo instance</returns>
        </member>
        <member name="M:MangadexDownloader.Parsing.JsonParsing.IChapterJsonParser.GetChapterInfo(System.Int32)">
            <summary>
            convert chapter's id into ChapterInfo instance
            </summary>
            <param name="id">chapter's id</param>
            <returns>ChapterInfo instance</returns>
        </member>
        <member name="T:MangadexDownloader.Parsing.JsonParsing.IJsonParser">
            <summary>
            interface for json parsing
            </summary>
        </member>
        <member name="M:MangadexDownloader.Parsing.JsonParsing.IJsonParser.GetJson(System.Int32)">
            <summary>
            get json method
            </summary>
            <param name="id">id for manga or chapter</param>
            <returns>returns json string</returns>
        </member>
        <member name="M:MangadexDownloader.Parsing.JsonParsing.IMangaJsonParser.ConvertJson(System.String)">
            <summary>
            convert json string to ChapterInfo instance
            </summary>
            <param name="json"></param>
            <returns>ChapterInfo instance</returns>
        </member>
        <member name="M:MangadexDownloader.Parsing.JsonParsing.IMangaJsonParser.GetMangaInfo(System.Int32)">
            <summary>
            convert chapter's id into ChapterInfo instance
            </summary>
            <param name="id">chapter's id</param>
            <returns>ChapterInfo instance</returns>
        </member>
    </members>
</doc>
